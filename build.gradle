plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'technomad.api.server'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-configuration-processor"
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.data:spring-data-envers:3.1.0"

	// Annotation
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// ETC API
	implementation 'com.mysql:mysql-connector-j:8.0.32'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'

	// QueryDsl 패키지를 정의
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// 딥러닝
	implementation 'net.sourceforge.tess4j:tess4j:4.5.1'
	implementation 'com.google.code.gson:gson:2.8.7'
	implementation 'commons-io:commons-io:2.8.0'

	// TEST
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
tasks.named('test') {
	useJUnitPlatform()
}

// QueryDsl 빌드 옵션
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
	file(querydslDir).deleteDir()
}
